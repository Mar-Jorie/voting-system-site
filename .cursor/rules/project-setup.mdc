---
description: Setup guide for React applications with Vite and Tailwind CSS using official Vite plugin - no PostCSS dependencies, including Progressive Web Application (PWA) capabilities.
globs:
alwaysApply: false
---

# Project Setup

Setup guide for React applications with Vite and Tailwind CSS using the official Vite plugin without PostCSS dependencies.

**IMPORTANT**: After project setup, all UI implementations MUST follow the mandatory design rules:
- `@component-design.mdc` - Component patterns and implementations
- `@design-system.mdc` - Typography, spacing, colors, and visual specifications
- `@layout-structure.mdc` - Layout positioning and structure rules
- `@page-layouts.mdc` - Page-specific layout patterns
- `@responsive-layout.mdc` - Mobile-first responsive behavior

### Key Dependencies

- **react** - Core framework for building user interfaces
- **react-router-dom** - Client-side routing for React applications
- **@tailwindcss/vite** - Official Vite plugin for Tailwind CSS integration
- **tailwindcss** - Utility-first CSS framework for rapid UI development
- **@heroicons/react** - Official Tailwind CSS icon library (MANDATORY - NO Bootstrap Icons)
- **react-hot-toast** - Toast notification system for error handling and user feedback (MANDATORY)
- **react-infinite-scroll-component** - Infinite scrolling pagination for large datasets
- **puppeteer** - Browser automation for end-to-end testing and debugging (REQUIRED)
- **vite-plugin-pwa** - Progressive Web Application capabilities
- **workbox-window** - Service worker management for PWA

## ðŸŽ¨ Color System Configuration

### Tailwind CSS v4 Configuration (MANDATORY)

**IMPORTANT**: This setup uses Tailwind CSS v4. Do NOT create a `tailwind.config.js` file - colors are defined in the `@theme` directive in `src/index.css`.

```javascript
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        // Primary Color System - MANDATORY (Connected to CSS variables)
        primary: {
          25: 'var(--color-primary-25)',
          50: 'var(--color-primary-50)',
          100: 'var(--color-primary-100)',
          200: 'var(--color-primary-200)',
          300: 'var(--color-primary-300)',
          400: 'var(--color-primary-400)',
          500: 'var(--color-primary-500)',
          600: 'var(--color-primary-600)', // Main brand color
          700: 'var(--color-primary-700)',
          800: 'var(--color-primary-800)',
          900: 'var(--color-primary-900)',
          950: 'var(--color-primary-950)',
        },
        // Semantic Colors - MANDATORY (Connected to CSS variables)
        success: {
          50: 'var(--color-green-50)',
          100: 'var(--color-green-100)',
          500: 'var(--color-green-500)',
          600: 'var(--color-green-600)',
          700: 'var(--color-green-700)',
        },
        error: {
          50: 'var(--color-red-50)',
          100: 'var(--color-red-100)',
          500: 'var(--color-red-500)',
          600: 'var(--color-red-600)',
          700: 'var(--color-red-700)',
        },
        warning: {
          50: 'var(--color-orange-50)',
          100: 'var(--color-orange-100)',
          500: 'var(--color-orange-500)',
          600: 'var(--color-orange-600)',
          700: 'var(--color-orange-700)',
        },
        info: {
          50: 'var(--color-blue-50)',
          100: 'var(--color-blue-100)',
          500: 'var(--color-blue-500)',
          600: 'var(--color-blue-600)',
          700: 'var(--color-blue-700)',
        },
        // Additional color systems from current codebase
        gray: {
          25: 'var(--color-gray-25)',
          50: 'var(--color-gray-50)',
          100: 'var(--color-gray-100)',
          200: 'var(--color-gray-200)',
          300: 'var(--color-gray-300)',
          400: 'var(--color-gray-400)',
          500: 'var(--color-gray-500)',
          600: 'var(--color-gray-600)',
          700: 'var(--color-gray-700)',
          800: 'var(--color-gray-800)',
          900: 'var(--color-gray-900)',
          950: 'var(--color-gray-950)',
        },
        primary: {
          25: 'var(--color-primary-25)',
          50: 'var(--color-primary-50)',
          100: 'var(--color-primary-100)',
          200: 'var(--color-primary-200)',
          300: 'var(--color-primary-300)',
          400: 'var(--color-primary-400)',
          500: 'var(--color-primary-500)',
          600: 'var(--color-primary-600)',
          700: 'var(--color-primary-700)',
          800: 'var(--color-primary-800)',
          900: 'var(--color-primary-900)',
          950: 'var(--color-primary-950)',
        },
        green: {
          25: 'var(--color-green-25)',
          50: 'var(--color-green-50)',
          100: 'var(--color-green-100)',
          200: 'var(--color-green-200)',
          300: 'var(--color-green-300)',
          400: 'var(--color-green-400)',
          500: 'var(--color-green-500)',
          600: 'var(--color-green-600)',
          700: 'var(--color-green-700)',
          800: 'var(--color-green-800)',
          900: 'var(--color-green-900)',
          950: 'var(--color-green-950)',
        },
        red: {
          25: 'var(--color-red-25)',
          50: 'var(--color-red-50)',
          100: 'var(--color-red-100)',
          200: 'var(--color-red-200)',
          300: 'var(--color-red-300)',
          400: 'var(--color-red-400)',
          500: 'var(--color-red-500)',
          600: 'var(--color-red-600)',
          700: 'var(--color-red-700)',
          800: 'var(--color-red-800)',
          900: 'var(--color-red-900)',
          950: 'var(--color-red-950)',
        },
        blue: {
          25: 'var(--color-blue-25)',
          50: 'var(--color-blue-50)',
          100: 'var(--color-blue-100)',
          200: 'var(--color-blue-200)',
          300: 'var(--color-blue-300)',
          400: 'var(--color-blue-400)',
          500: 'var(--color-blue-500)',
          600: 'var(--color-blue-600)',
          700: 'var(--color-blue-700)',
          800: 'var(--color-blue-800)',
          900: 'var(--color-blue-900)',
          950: 'var(--color-blue-950)',
        },
        orange: {
          25: 'var(--color-orange-25)',
          50: 'var(--color-orange-50)',
          100: 'var(--color-orange-100)',
          200: 'var(--color-orange-200)',
          300: 'var(--color-orange-300)',
          400: 'var(--color-orange-400)',
          500: 'var(--color-orange-500)',
          600: 'var(--color-orange-600)',
          700: 'var(--color-orange-700)',
          800: 'var(--color-orange-800)',
          900: 'var(--color-orange-900)',
          950: 'var(--color-orange-950)',
        },
        yellow: {
          25: 'var(--color-yellow-25)',
          50: 'var(--color-yellow-50)',
          100: 'var(--color-yellow-100)',
          200: 'var(--color-yellow-200)',
          300: 'var(--color-yellow-300)',
          400: 'var(--color-yellow-400)',
          500: 'var(--color-yellow-500)',
          600: 'var(--color-yellow-600)',
          700: 'var(--color-yellow-700)',
          800: 'var(--color-yellow-800)',
          900: 'var(--color-yellow-900)',
          950: 'var(--color-yellow-950)',
        },
        indigo: {
          25: 'var(--color-indigo-25)',
          50: 'var(--color-indigo-50)',
          100: 'var(--color-indigo-100)',
          200: 'var(--color-indigo-200)',
          300: 'var(--color-indigo-300)',
          400: 'var(--color-indigo-400)',
          500: 'var(--color-indigo-500)',
          600: 'var(--color-indigo-600)',
          700: 'var(--color-indigo-700)',
          800: 'var(--color-indigo-800)',
          900: 'var(--color-indigo-900)',
          950: 'var(--color-indigo-950)',
        },
        pink: {
          25: 'var(--color-pink-25)',
          50: 'var(--color-pink-50)',
          100: 'var(--color-pink-100)',
          200: 'var(--color-pink-200)',
          300: 'var(--color-pink-300)',
          400: 'var(--color-pink-400)',
          500: 'var(--color-pink-500)',
          600: 'var(--color-pink-600)',
          700: 'var(--color-pink-700)',
          800: 'var(--color-pink-800)',
          900: 'var(--color-pink-900)',
          950: 'var(--color-pink-950)',
        },
        teal: {
          25: 'var(--color-teal-25)',
          50: 'var(--color-teal-50)',
          100: 'var(--color-teal-100)',
          200: 'var(--color-teal-200)',
          300: 'var(--color-teal-300)',
          400: 'var(--color-teal-400)',
          500: 'var(--color-teal-500)',
          600: 'var(--color-teal-600)',
          700: 'var(--color-teal-700)',
          800: 'var(--color-teal-800)',
          900: 'var(--color-teal-900)',
          950: 'var(--color-teal-950)',
        },
      },
      // Responsive breakpoints - MANDATORY
      screens: {
        'xs': '475px',
        'sm': '640px',
        'md': '768px',
        'lg': '1024px',
        'xl': '1280px',
        '2xl': '1536px',
        '3xl': '1920px',  // Large Desktop support
      },
    },
  },
  plugins: [],
}
```

### Index.css Color Setup (MANDATORY)

```css
@import "tailwindcss";
/* Bootstrap Icons removed - use @heroicons/react instead */

@reference; /* CRITICAL: Required for Tailwind v4 when using @apply in custom classes */

@theme {
  --color-primary-25: #ffffff;
  --color-primary-50: #e9eef2;
  --color-primary-100: #d3dde5;
  --color-primary-200: #bdcdd8;
  --color-primary-300: #a7bccb;
  --color-primary-400: #91abbe;
  --color-primary-500: #7b9ab1;
  --color-primary-600: #6589a4; /* Main brand color */
  --color-primary-700: #4f7897;
  --color-primary-800: #39678a;
  --color-primary-900: #23577d;
  --color-primary-950: #1a4566;
}

:root {
  /* Primary Color Palette - MANDATORY BRAND COLORS */
  --color-primary-25: #ffffff;
  --color-primary-50: #e9eef2;
  --color-primary-100: #d3dde5;
  --color-primary-200: #bdcdd8;
  --color-primary-300: #a7bccb;
  --color-primary-400: #91abbe;
  --color-primary-500: #7b9ab1;
  --color-primary-600: #6589a4; /* Main brand color */
  --color-primary-700: #4f7897;
  --color-primary-800: #39678a;
  --color-primary-900: #23577d;
  --color-primary-950: #1a4566;

  /* Gray Color Palette */
  --color-gray-25: #ffffff;
  --color-gray-50: #f9fafb;
  --color-gray-100: #f3f4f6;
  --color-gray-200: #e5e7eb;
  --color-gray-300: #d1d5db;
  --color-gray-400: #9ca3af;
  --color-gray-500: #6b7280;
  --color-gray-600: #4b5563;
  --color-gray-700: #374151;
  --color-gray-800: #1f2937;
  --color-gray-900: #111827;
  --color-gray-950: #030712;

  /* Purple Color Palette - Semantic purple colors for accents (use sparingly) */
  --color-purple-25: #faf5ff;
  --color-purple-50: #f3e8ff;
  --color-purple-100: #e9d5ff;
  --color-purple-200: #d8b4fe;
  --color-purple-300: #c084fc;
  --color-purple-400: #a855f7;
  --color-purple-500: #9333ea;
  --color-purple-600: #7c3aed;
  --color-purple-700: #6d28d9;
  --color-purple-800: #5b21b6;
  --color-purple-900: #4c1d95;
  --color-purple-950: #2e1065;

  /* Green Color Palette - Success Colors */
  --color-green-25: #f0fdf4;
  --color-green-50: #ecfdf5;
  --color-green-100: #d1fae5;
  --color-green-200: #a7f3d0;
  --color-green-300: #6ee7b7;
  --color-green-400: #34d399;
  --color-green-500: #10b981;
  --color-green-600: #059669;
  --color-green-700: #047857;
  --color-green-800: #065f46;
  --color-green-900: #064e3b;
  --color-green-950: #022c22;

  /* Red Color Palette - Error Colors */
  --color-red-25: #fffbfa;
  --color-red-50: #fef2f2;
  --color-red-100: #fee2e2;
  --color-red-200: #fecaca;
  --color-red-300: #fca5a5;
  --color-red-400: #f87171;
  --color-red-500: #ef4444;
  --color-red-600: #dc2626;
  --color-red-700: #b91c1c;
  --color-red-800: #991b1b;
  --color-red-900: #7f1d1d;
  --color-red-950: #450a0a;

  /* Blue Color Palette - Info Colors */
  --color-blue-25: #fafbff;
  --color-blue-50: #eff6ff;
  --color-blue-100: #dbeafe;
  --color-blue-200: #bfdbfe;
  --color-blue-300: #93c5fd;
  --color-blue-400: #60a5fa;
  --color-blue-500: #3b82f6;
  --color-blue-600: #2563eb;
  --color-blue-700: #1d4ed8;
  --color-blue-800: #1e40af;
  --color-blue-900: #1e3a8a;
  --color-blue-950: #172554;

  /* Orange Color Palette - Warning Colors */
  --color-orange-25: #fffbfa;
  --color-orange-50: #fff7ed;
  --color-orange-100: #ffedd5;
  --color-orange-200: #fed7aa;
  --color-orange-300: #fdba74;
  --color-orange-400: #fb923c;
  --color-orange-500: #f97316;
  --color-orange-600: #ea580c;
  --color-orange-700: #c2410c;
  --color-orange-800: #9a3412;
  --color-orange-900: #7c2d12;
  --color-orange-950: #431407;

  /* Yellow Color Palette */
  --color-yellow-25: #fefce8;
  --color-yellow-50: #fefce8;
  --color-yellow-100: #fef3c7;
  --color-yellow-200: #fde68a;
  --color-yellow-300: #fcd34d;
  --color-yellow-400: #fbbf24;
  --color-yellow-500: #f59e0b;
  --color-yellow-600: #d97706;
  --color-yellow-700: #b45309;
  --color-yellow-800: #92400e;
  --color-yellow-900: #78350f;
  --color-yellow-950: #451a03;

  /* Indigo Color Palette */
  --color-indigo-25: #fafbff;
  --color-indigo-50: #eef2ff;
  --color-indigo-100: #e0e7ff;
  --color-indigo-200: #c7d2fe;
  --color-indigo-300: #a5b4fc;
  --color-indigo-400: #818cf8;
  --color-indigo-500: #6366f1;
  --color-indigo-600: #4f46e5;
  --color-indigo-700: #4338ca;
  --color-indigo-800: #3730a3;
  --color-indigo-900: #312e81;
  --color-indigo-950: #1e1b4b;

  /* Pink Color Palette */
  --color-pink-25: #fdf2f8;
  --color-pink-50: #fdf2f8;
  --color-pink-100: #fce7f3;
  --color-pink-200: #fbcfe8;
  --color-pink-300: #f9a8d4;
  --color-pink-400: #f472b6;
  --color-pink-500: #ec4899;
  --color-pink-600: #db2777;
  --color-pink-700: #be185d;
  --color-pink-800: #9d174d;
  --color-pink-900: #831843;
  --color-pink-950: #500724;

  /* Teal Color Palette */
  --color-teal-25: #f0fdfa;
  --color-teal-50: #f0fdfa;
  --color-teal-100: #ccfbf1;
  --color-teal-200: #99f6e4;
  --color-teal-300: #5eead4;
  --color-teal-400: #2dd4bf;
  --color-teal-500: #14b8a6;
  --color-teal-600: #0d9488;
  --color-teal-700: #0f766e;
  --color-teal-800: #115e59;
  --color-teal-900: #134e4a;
  --color-teal-950: #042f2e;
}

/* Global Responsive Rules - MANDATORY */
* {
  box-sizing: border-box;
}

html {
  overflow-x: hidden; /* Prevent horizontal scroll */
}

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden; /* Prevent horizontal scroll */
  width: 100vw; /* Full viewport width */
  max-width: 100vw; /* Never exceed viewport */
}
```

## ðŸ“± Progressive Web Application (PWA) Setup

### LLM Agent PWA Implementation Instructions

When implementing PWA capabilities in the current React project, the LLM Agent should follow these steps:

#### 1. Install PWA Dependencies
```bash
npm install vite-plugin-pwa workbox-window
```

#### 2. Configure Vite PWA Plugin
Update `vite.config.js` to include PWA configuration:
```javascript
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'
import { VitePWA } from 'vite-plugin-pwa'

export default defineConfig({
  plugins: [
    react(),
    tailwindcss(),
    VitePWA({
      registerType: 'autoUpdate',
      includeAssets: ['favicon.ico', 'apple-touch-icon.png', 'masked-icon.svg'],
      manifest: {
        name: '{{PROJECT_NAME}}',
        short_name: '{{PROJECT_SHORT_NAME}}',
        description: '{{PROJECT_DESCRIPTION}}',
        theme_color: '#ffffff',
        background_color: '#ffffff',
        display: 'standalone',
        orientation: 'portrait',
        scope: '/',
        start_url: '/',
        icons: [
          {
            src: 'pwa-192x192.png',
            sizes: '192x192',
            type: 'image/png'
          },
          {
            src: 'pwa-512x512.png',
            sizes: '512x512',
            type: 'image/png'
          }
        ]
      },
      workbox: {
        globPatterns: ['**/*.{js,css,html,ico,png,svg}']
      }
    })
  ],
  server: {
    host: "0.0.0.0",
    port: 3000,
    open: true,
  },
})
```

**LLM Agent Instructions**: Replace the following placeholders based on the project name from `package.json`:
- `{{PROJECT_NAME}}` - Use the project name from package.json (e.g., "cash-register" becomes "Cash Register")
- `{{PROJECT_SHORT_NAME}}` - Use a shortened version (e.g., "CashRegister")
- `{{PROJECT_DESCRIPTION}}` - Create a descriptive text based on the project purpose

#### 3. Add PWA Icons
Create PWA icon files in the `public` directory:
- `pwa-192x192.png` (192x192 pixels)
- `pwa-512x512.png` (512x512 pixels)
- `apple-touch-icon.png` (180x180 pixels)
- `masked-icon.svg` (monochrome icon)

#### 4. Update HTML Meta Tags
Add PWA meta tags to `index.html`:
```html
<meta name="theme-color" content="#ffffff">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="default">
<meta name="apple-mobile-web-app-title" content="{{PROJECT_NAME}}">
<link rel="apple-touch-icon" href="/apple-touch-icon.png">
<link rel="mask-icon" href="/masked-icon.svg" color="#000000">
```

#### 5. Register Service Worker
The Vite PWA plugin automatically handles service worker registration. No additional code needed.


## Quick Setup Commands

> **Important**: This setup creates the React project directly in the current directory. Do NOT create a subfolder - all files will be placed in your current working directory.

### 1. Create Vite Project in Current Directory

#### For New Projects (Empty Directory)
```bash
npm create vite@latest . -- --template react
```

#### For Existing Projects (With Files) - MANDATORY AUTO-HANDLING

**OS Detection and Command Selection:**
```javascript
// Detect operating system for proper command handling
const isWindows = process.platform === 'win32';
const isUnix = process.platform === 'linux' || process.platform === 'darwin';

// Windows Command
if (isWindows) {
  echo 3 | npm create vite@latest . -- --template react --force
}

// Unix/Linux/macOS Command  
if (isUnix) {
  printf "3\n" | npm create vite@latest . -- --template react --force
}
```

**Alternative Solution (Cross-Platform):**
```bash
# WORKING SOLUTION: Create in temporary subdirectory then move files
# This bypasses the "directory not empty" prompt entirely
npm create vite@latest temp-vite-project -- --template react
mv temp-vite-project/* . 
mv temp-vite-project/.* . 2>/dev/null || true
rmdir temp-vite-project
```

#### Vite Installation with Existing Files (MANDATORY)
When installing Vite in existing projects:
- **ALWAYS use the subdirectory workaround** to avoid interactive prompts
- **Create project in temporary subdirectory** then move files to current directory
- **NEVER ask user for input** - handle directory conflicts automatically
- **Preserve existing configurations**: Keep existing files like `.cursor/` directory
- **Use the working solution**: Create in `temp-vite-project` subdirectory, then move files

### 2. Install Dependencies
```bash
npm install tailwindcss @tailwindcss/vite react-infinite-scroll-component @heroicons/react crypto-js react-hot-toast
npm install --save-dev puppeteer
```

**Important**: 
- Do NOT install PostCSS or any PostCSS plugins
- Use ONLY @heroicons/react for all icons (NO Bootstrap Icons)
- Remove any existing Bootstrap Icons CSS imports

### 3. Configure Vite Plugin
```javascript
// See PWA Configuration section above for complete vite.config.js setup
// This includes React, Tailwind CSS, and PWA plugins with full configuration
```

### 4. Import Tailwind CSS (Tailwind v4 Setup)
```css
/* See "Index.css Color Setup" section above for complete CSS configuration */
/* This includes @import, @theme, :root variables, and custom component styles */
```


### 5. Initialize Git Repository
```bash
git init
```

```bash
# Start development server (runs in background)
npm run dev
```